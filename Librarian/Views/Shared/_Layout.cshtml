<!DOCTYPE html>
<html ng-app="librarianApp">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Librarian Library, Bais Yaakov Seminary</title>
    <link rel="stylesheet" type="text/css" href="~/Content/dist/css/app.min.css" />
    <script src="~/Scripts/jquery-bundle.min.js"></script>
    <script src="~/Scripts/angular-min.js"></script>
    <script src="~/Scripts/bootstrap-bundle.min.js"></script>
    <script src="~/Scripts/librarian-app.js"></script>
    <script src="~/Scripts/validation.js"></script>
    <script src="~/Scripts/dialog.js"></script>
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="@Url.Action("Index", "Home")">Librarian Library</a>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li><a href="@Url.Action("Index","Item")/#/">Manage Items</a></li>
                    <li>@Html.ActionLink("Manage Authors", "Index", "Author")</li>
                    <li>@Html.ActionLink("Manage Patrons", "Index", "Patron")</li>
                    <li>@Html.ActionLink("Manage Publishers", "Index", "Publisher")</li>
                </ul>
                <p class="nav navbar-text navbar-right">Hello, @User.Identity.Name!</p>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @if (Model != null && !String.IsNullOrEmpty(Model.ClientController))
        {
            <div ng-controller="@Angular.DashedToCamelCase(Model.ClientController) as controller">
                @RenderBody()
                <input class="model-container" type="hidden" value='@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Contents))' />
                <input class="url-container details" type="hidden" value="@Url.Action("Details")" />
                <input class="url-container create-view" type="hidden" value="@Url.Action("Create")" />
                <input class="url-container create" type="hidden" value="@Url.Action("Add")" />
                <input class="url-container delete" type="hidden" value="@Url.Action("Delete")" />
                <input class="url-container edit" type="hidden" value="@Url.Action("Edit")" />
                <input class="url-container update" type="hidden" value="@Url.Action("Update")" />
            </div>
        }
        else
        {
            @RenderBody()
        }
        <hr />
        <footer>
            <p>&copy; 2015 - Librarian Library</p>
        </footer>
    </div>
    @RenderSection("scripts", false) @* render possible dependencies before rendering controller ref *@
    @if (Model != null && !String.IsNullOrEmpty(Model.ClientController))
    {
        <script src="~/Scripts/@(Model.ClientController).js"></script>
    }
</body>
</html>
